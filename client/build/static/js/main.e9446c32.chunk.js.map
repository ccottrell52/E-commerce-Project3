{"version":3,"sources":["utils/mutations.js","utils/helpers.js","utils/actions.js","utils/reducers.js","utils/GlobalState.js","components/ProductItem/index.js","utils/queries.js","assets/spinner.gif","components/ProductList/index.js","components/CategoryMenu/index.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","pages/Home.js","pages/Detail.js","components/Jumbotron/index.js","pages/NoMatch.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","pages/Success.js","pages/OrderHistory.js","pages/Wishlist.js","App.js","index.js"],"names":["LOGIN","gql","ADD_ORDER","ADD_USER","ADD_TO_WISHLIST","pluralize","name","count","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","_id","oncomplete","close","UPDATE_PRODUCTS","ADD_TO_CART","ADD_MULTIPLE_TO_CART","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","TOGGLE_CART","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","reducer","state","action","type","products","cartOpen","cart","product","map","purchaseQuantity","newState","filter","length","categories","currentCategory","StoreContext","createContext","Provider","StoreProvider","value","initialState","props","useReducer","dispatch","useStoreContext","useContext","ProductItem","item","useMutation","addItem","image","price","quantity","category","addToWishList","variables","data","error","className","to","alt","src","onClick","itemInCart","find","cartItem","parseInt","QUERY_PRODUCTS","QUERY_CHECKOUT","QUERY_CATEGORIES","QUERY_USER","QUERY_WISHLIST","ProductList","useQuery","loading","useEffect","forEach","then","spinner","CategoryMenu","categoryData","id","CartItem","placeholder","onChange","target","role","removeFromCart","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","stripePromise","loadStripe","Cart","useLazyQuery","getCheckout","toggleCart","res","redirectToCheckout","sessionId","checkout","session","getCart","sum","toFixed","calculateTotal","Auth","loggedIn","productIds","i","push","Home","Detail","useParams","useState","currentProduct","setCurrentProduct","indexedProducts","description","disabled","p","Jumbotron","children","style","height","clear","paddingTop","textAlign","NoMatch","Login","email","password","formState","setFormState","login","handleFormSubmit","event","preventDefault","mutationResponse","handleChange","onSubmit","htmlFor","Signup","addUser","firstName","lastName","Nav","href","logout","Success","addOrder","setTimeout","saveOrder","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","index","Wishlist","wishlist","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e9446c32.chunk.js","sourcesContent":["import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($products: [ID]!) {\n    addOrder(products: $products) {\n      purchaseDate\n      products {\n        _id\n        name\n        description\n        price\n        quantity\n        category {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_TO_WISHLIST = gql `\n  mutation addToWishList ($name: String!, $price: Float!, $category: String! ){\n    addToWishList(name: $name, price: $price, category: $category){\n      _id\n      firstName\n      lastName\n      email\n      wishlist {\n        name\n        price\n        category {\n          _id\n        }\n      }\n    }\n  }\n`;","export function pluralize(name, count) {\n  if (count === 1) {\n    return name;\n  }\n  return name + 's';\n}\n\nexport function idbPromise(storeName, method, object) {\n  return new Promise((resolve, reject) => {\n    const request = window.indexedDB.open('shop-shop', 1);\n    let db, tx, store;\n    request.onupgradeneeded = function(e) {\n      const db = request.result;\n      db.createObjectStore('products', { keyPath: '_id' });\n      db.createObjectStore('categories', { keyPath: '_id' });\n      db.createObjectStore('cart', { keyPath: '_id' });\n    };\n\n    request.onerror = function(e) {\n      console.log('There was an error');\n    };\n\n    request.onsuccess = function(e) {\n      db = request.result;\n      tx = db.transaction(storeName, 'readwrite');\n      store = tx.objectStore(storeName);\n\n      db.onerror = function(e) {\n        console.log('error', e);\n      };\n\n      switch (method) {\n        case 'put':\n          store.put(object);\n          resolve(object);\n          break;\n        case 'get':\n          const all = store.getAll();\n          all.onsuccess = function() {\n            resolve(all.result);\n          };\n          break;\n        case 'delete':\n          store.delete(object._id);\n          break;\n        default:\n          console.log('No valid method');\n          break;\n      }\n\n      tx.oncomplete = function() {\n        db.close();\n      };\n    };\n  });\n}\n","// PRODUCT\nexport const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\n\n// CART\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\nexport const TOGGLE_CART = \"TOGGLE_CART\";\n\n// CATEGORY\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\n","import { useReducer } from \"react\";\nimport {\n  UPDATE_PRODUCTS,\n  ADD_TO_CART,\n  UPDATE_CART_QUANTITY,\n  REMOVE_FROM_CART,\n  ADD_MULTIPLE_TO_CART,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n  CLEAR_CART,\n  TOGGLE_CART\n} from \"./actions\";\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case UPDATE_PRODUCTS:\n      return {\n        ...state,\n        products: [...action.products],\n      };\n\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.product],\n      };\n\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.products],\n      };\n\n    case UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: state.cart.map(product => {\n          if (action._id === product._id) {\n            product.purchaseQuantity = action.purchaseQuantity\n          }\n          return product\n        })\n      };\n\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter(product => {\n        return product._id !== action._id;\n      });\n\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState\n      };\n\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: []\n      };\n\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen\n      };\n\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories],\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport function useProductReducer(initialState) {\n  return useReducer(reducer, initialState)\n}\n","import React, { createContext, useContext } from \"react\";\nimport { useProductReducer } from './reducers'\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst StoreProvider = ({ value = [], ...props }) => {\n  const [state, dispatch] = useProductReducer({\n    products: [],\n    cart: [],\n    cartOpen: false,\n    categories: [],\n    currentCategory: '',\n  });\n\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };\n","import React from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_TO_WISHLIST } from \"../../utils/mutations\";\nimport { Link } from \"react-router-dom\";\nimport { pluralize } from \"../../utils/helpers\"\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nfunction ProductItem(item) {\n  const [state, dispatch] = useStoreContext();\n  const [addItem] = useMutation(ADD_TO_WISHLIST);\n  const {\n    image,\n    name,\n    _id,\n    price,\n    quantity,\n    category\n  } = item;\n\n  const { cart } = state\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\n    console.log(itemInCart)\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n    }\n  }\n\n  const addToWishList = async ()=>{\n    try {\n      const { data } = await addItem({\n        variables: {\n          name,\n          price,\n          category\n        },\n      })\n    } catch ( error ){\n      console.error(error);\n    }\n  };\n\n  return (\n    <div className=\"card px-1 py-1\">\n      <Link to={`/products/${_id}`}>\n        <img\n          alt={name}\n          src={`/images/${image}`}\n        />\n        <p>{name}</p>\n      </Link>\n      <div>\n        <div>{quantity} {pluralize(\"item\", quantity)} in stock</div>\n        <span>${price}</span>\n      </div>\n      <button onClick={addToWishList}>Add to Wish List</button>\n      <button onClick={addToCart}>Add to Cart</button>\n    </div>\n  );\n}\n\nexport default ProductItem;\n","import { gql } from '@apollo/client';\n\nexport const QUERY_PRODUCTS = gql`\n  query getProducts($category: ID) {\n    products(category: $category) {\n      _id\n      name\n      description\n      price\n      quantity\n      image\n      category {\n        _id\n      }\n      productTag {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($products: [ID]!) {\n    checkout(products: $products) {\n      session\n    }\n  }\n`;\n\nexport const QUERY_ALL_PRODUCTS = gql`\n  {\n    products {\n      _id\n      name\n      description\n      price\n      quantity\n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n  {\n    categories {\n      _id\n      name\n    }\n  }\n`;\n\nexport const QUERY_PRODUCTTAGS = gql`\n  {\n    productTag {\n      _id\n      name\n    }\n  }\n`\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      firstName\n      lastName\n      orders {\n        _id\n        purchaseDate\n        products {\n          _id\n          name\n          description\n          price\n          quantity\n          image\n        }\n      }\n    }\n  }\n`;\n\nexport const QUERY_WISHLIST = gql`\n  query wishlist {\n    wishlist {\n      _id\n      firstName\n      lastName\n      email\n      wishlist {\n        _id\n        name\n        description\n        price\n        quantity\n        image\n      }\n    }\n  }\n`;","export default __webpack_public_path__ + \"static/media/spinner.7e729fec.gif\";","import React, { useEffect } from 'react';\nimport ProductItem from '../ProductItem';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_PRODUCTS } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport spinner from '../../assets/spinner.gif';\n\nfunction ProductList() {\n  const [state, dispatch] = useStoreContext();\n\n  const { currentCategory } = state;\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    } else if (!loading) {\n      idbPromise('products', 'get').then((products) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products,\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n\n    return state.products.filter(\n      (product) => product.category._id === currentCategory\n    );\n  }\n\n  return (\n    <div className=\"my-2\">\n      <h2>Our Products:</h2>\n      {state.products.length ? (\n        <div className=\"flex-row\">\n          {filterProducts().map((product) => (\n            <ProductItem\n              key={product._id}\n              _id={product._id}\n              image={product.image}\n              name={product.name}\n              price={product.price}\n              quantity={product.quantity}\n              category={product.category._id}\n            />\n          ))}\n        </div>\n      ) : (\n        <h3>You haven't added any products yet!</h3>\n      )}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n    </div>\n  );\n}\n\nexport default ProductList;\n","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport {\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n} from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\n\nfunction CategoryMenu() {\n  const [state, dispatch] = useStoreContext();\n\n  const { categories } = state;\n\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories,\n      });\n      categoryData.categories.forEach((category) => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then((categories) => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories,\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = (id) => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id,\n    });\n  };\n\n  return (\n    <div>\n      <h2>Choose a Category:</h2>\n      {categories.map((item) => (\n        <button\n          key={item._id}\n          onClick={() => {\n            handleClick(item._id);\n          }}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default CategoryMenu;\n","import React from 'react';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nconst CartItem = ({ item }) => {\n\n  const [, dispatch] = useStoreContext();\n\n  const removeFromCart = item => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id\n    });\n    idbPromise('cart', 'delete', { ...item });\n\n  };\n\n  const onChange = (e) => {\n    const value = e.target.value;\n    if (value === '0') {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id\n      });\n      idbPromise('cart', 'delete', { ...item });\n\n    } else {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: item._id,\n        purchaseQuantity: parseInt(value)\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\n\n    }\n  }\n\n  return (\n    <div className=\"flex-row\">\n      <div>\n        <img\n          src={`/images/${item.image}`}\n          alt=\"\"\n        />\n      </div>\n      <div>\n        <div>{item.name}, ${item.price}</div>\n        <div>\n          <span>Qty:</span>\n          <input\n            type=\"number\"\n            placeholder=\"1\"\n            value={item.purchaseQuantity}\n            onChange={onChange}\n          />\n          <span\n            role=\"img\"\n            aria-label=\"trash\"\n            onClick={() => removeFromCart(item)}\n          >\n            🗑️\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CartItem;\n","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  // Checks if there is a saved token and it's still valid\n  loggedIn() {\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  // Retrieves the user token from localStorage\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  // Saves user token to localStorage\n  login(idToken) {\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  // Clear user token and profile data from localStorage then reloads the page to reset the state of the application\n  logout() {\n    localStorage.removeItem('id_token');\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useEffect } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/client';\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport CartItem from '../CartItem';\nimport Auth from '../../utils/auth';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\nimport './style.css';\n\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst Cart = () => {\n  const [state, dispatch] = useStoreContext();\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\n  useEffect(() => {\n    if (data) {\n      stripePromise.then((res) => {\n        res.redirectToCheckout({ sessionId: data.checkout.session });\n      });\n    }\n  }, [data]);\n\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise('cart', 'get');\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\n    }\n\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n\n  function toggleCart() {\n    dispatch({ type: TOGGLE_CART });\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n    state.cart.forEach((item) => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  function submitCheckout() {\n    const productIds = [];\n\n    state.cart.forEach((item) => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        productIds.push(item._id);\n      }\n    });\n\n    getCheckout({\n      variables: { products: productIds },\n    });\n  }\n\n  if (!state.cartOpen) {\n    return (\n      <div className=\"cart-closed\" onClick={toggleCart}>\n        <span role=\"img\" aria-label=\"trash\">\n          🛒\n        </span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"cart\">\n      <div className=\"close\" onClick={toggleCart}>\n        [close]\n      </div>\n      <h2>Shopping Cart</h2>\n      {state.cart.length ? (\n        <div>\n          {state.cart.map((item) => (\n            <CartItem key={item._id} item={item} />\n          ))}\n\n          <div className=\"flex-row space-between\">\n            <strong>Total: ${calculateTotal()}</strong>\n\n            {Auth.loggedIn() ? (\n              <button onClick={submitCheckout}>Checkout</button>\n            ) : (\n              <span>(log in to check out)</span>\n            )}\n          </div>\n        </div>\n      ) : (\n        <h3>\n          <span role=\"img\" aria-label=\"shocked\">\n            😱\n          </span>\n          You haven't added anything to your cart yet!\n        </h3>\n      )}\n    </div>\n  );\n};\n\nexport default Cart;\n","import React from \"react\";\nimport ProductList from \"../components/ProductList\";\nimport CategoryMenu from \"../components/CategoryMenu\";\nimport Cart from \"../components/Cart\";\n\nconst Home = () => {\n  return (\n    <div className=\"container\">\n      <CategoryMenu />\n      <ProductList />\n      <Cart />\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport Cart from '../components/Cart';\nimport { useStoreContext } from '../utils/GlobalState';\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from '../utils/actions';\nimport { QUERY_PRODUCTS } from '../utils/queries';\nimport { idbPromise } from '../utils/helpers';\nimport spinner from '../assets/spinner.gif';\n\nfunction Detail() {\n  const [state, dispatch] = useStoreContext();\n  const { id } = useParams();\n\n  const [currentProduct, setCurrentProduct] = useState({});\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  const { products, cart } = state;\n\n  useEffect(() => {\n    if (products.length) {\n      setCurrentProduct(products.find((product) => product._id === id));\n    }\n    else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    }\n    else if (!loading) {\n      idbPromise('products', 'get').then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts,\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct, purchaseQuantity: 1 },\n      });\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id,\n    });\n\n    idbPromise('cart', 'delete', { ...currentProduct });\n  };\n\n  return (\n    <>\n      {currentProduct && cart ? (\n        <div className=\"container my-1\">\n          <Link to=\"/\">← Back to Products</Link>\n\n          <h2>{currentProduct.name}</h2>\n\n          <p>{currentProduct.description}</p>\n\n          <p>\n            <strong>Price:</strong>${currentProduct.price}{' '}\n            <button onClick={addToCart}>Add to Cart</button>\n            <button\n              disabled={!cart.find((p) => p._id === currentProduct._id)}\n              onClick={removeFromCart}\n            >\n              Remove from Cart\n            </button>\n          </p>\n\n          <img\n            src={`/images/${currentProduct.image}`}\n            alt={currentProduct.name}\n          />\n        </div>\n      ) : null}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n      <Cart />\n    </>\n  );\n}\n\nexport default Detail;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/signup\">← Go to Signup</Link>\n\n      <h2>Login</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/login\">← Go to Login</Link>\n\n      <h2>Signup</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\n\nfunction Nav() {\n\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/orderHistory\">\n              Order History\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/wishlist\">\n              Wishlist\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/signup\">\n              Signup\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <header className=\"flex-row px-1\">\n      <h1>\n        <Link to=\"/\">\n          <span role=\"img\" aria-label=\"shopping bag\">🛍️</span>\n          -Eric's-Emporium\n        </Link>\n      </h1>\n\n      <nav>\n        {showNavigation()}\n      </nav>\n    </header>\n  );\n}\n\nexport default Nav;\n","import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport Jumbotron from '../components/Jumbotron';\nimport { ADD_ORDER } from '../utils/mutations';\nimport { idbPromise } from '../utils/helpers';\n\nfunction Success() {\n  const [addOrder] = useMutation(ADD_ORDER);\n\n  useEffect(() => {\n    async function saveOrder() {\n      const cart = await idbPromise('cart', 'get');\n      const products = cart.map((item) => item._id);\n\n      if (products.length) {\n        const { data } = await addOrder({ variables: { products } });\n        const productData = data.addOrder.products;\n\n        productData.forEach((item) => {\n          idbPromise('cart', 'delete', item);\n        });\n      }\n\n      setTimeout(() => {\n        window.location.assign('/');\n      }, 3000);\n    }\n\n    saveOrder();\n  }, [addOrder]);\n\n  return (\n    <div>\n      <Jumbotron>\n        <h1>Success!</h1>\n        <h2>Thank you for your purchase!</h2>\n        <h2>You will now be redirected to the home page</h2>\n      </Jumbotron>\n    </div>\n  );\n}\n\nexport default Success;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../utils/queries';\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/\">← Back to Products</Link>\n\n        {user ? (\n          <>\n            <h2>\n              Order History for {user.firstName} {user.lastName}\n            </h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h3>\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\n                </h3>\n                <div className=\"flex-row\">\n                  {order.products.map(({ _id, image, name, price }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/products/${_id}`}>\n                        <img alt={name} src={`/images/${image}`} />\n                        <p>{name}</p>\n                      </Link>\n                      <div>\n                        <span>${price}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default OrderHistory;\n","import React from \"react\";\nimport { useQuery } from '@apollo/client';\nimport { useStoreContext } from '../utils/GlobalState';\n\nimport { Link } from 'react-router-dom';\n\nimport { QUERY_WISHLIST } from \"../utils/queries\";\n\nconst Wishlist = () => {\n    const { loading, data } = useQuery(QUERY_WISHLIST);\n    const user = data?.wishlist || [];\n\n    console.log(data?.wishlist?.wishlist);\n\n    const [state] = useStoreContext();\n\n    function calculateTotal() {\n        let sum = 0;\n        state.wishlist.forEach((item) => {\n            sum += item.price;\n        });\n        return sum.toFixed(2);\n    }\n\n    return (\n        <div className=\"container my-1\">\n            <Link to=\"/\">← Back to Products</Link>\n\n            <h2>Wishlist</h2>\n            {loading ? (\n            <div>Loading...</div>\n          ) : (\n            <div>Done loading</div>\n          )}\n            {user.wishlist?.length ? (\n                <div>\n                    {user.wishlist.map((item) => (\n                        < div className=\"flex-row\" >\n                            <div>\n                                <img\n                                    src={`/images/${item.image}`}\n                                    alt=\"\"\n                                />\n                            </div>\n                            <div>\n                                <div>{item.name}, ${item.price}</div>\n                                <div>\n                                    <span\n                                        role=\"img\"\n                                        aria-label=\"trash\"\n                                    // onClick={() => removeFromCart(item)}\n                                    >\n                                        🗑️\n                                    </span>\n                                </div>\n                            </div>\n                        </div>\n                    ))}\n\n                    <div className=\"flex-row space-between\">\n                        <strong>Total: ${calculateTotal()}</strong>\n                    </div>\n                </div>\n            ) : (\n                <h3>\n                    <span role=\"img\" aria-label=\"shocked\">\n                        😱\n                    </span>\n                    You haven't added anything to your wishlist yet!\n                </h3>\n            )}\n        </div>\n    )\n}\n\nexport default Wishlist;","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nimport Home from './pages/Home';\nimport Detail from './pages/Detail';\nimport NoMatch from './pages/NoMatch';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Nav from './components/Nav';\nimport { StoreProvider } from './utils/GlobalState';\nimport Success from './pages/Success';\nimport OrderHistory from './pages/OrderHistory';\nimport Wishlist from './pages/Wishlist';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <StoreProvider>\n            <Nav />\n            <Routes>\n              <Route \n                path=\"/\" \n                element={<Home />} \n              />\n              <Route \n                path=\"/login\" \n                element={<Login />} \n              />\n              <Route \n                path=\"/signup\" \n                element={<Signup />} \n              />\n              <Route \n                path=\"/success\" \n                element={<Success />} \n              />\n              <Route \n                path=\"/orderHistory\" \n                element={<OrderHistory />} \n              />\n              <Route \n                path=\"/products/:id\" \n                element={<Detail />} \n              />\n              <Route\n                path='/wishlist'\n                element={<Wishlist/>} \n              />\n              <Route \n                path=\"*\" \n                element={<NoMatch />} \n              />\n            </Routes>\n          </StoreProvider>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.register();\n"],"sourceRoot":""}