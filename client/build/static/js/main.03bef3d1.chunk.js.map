{"version":3,"sources":["utils/helpers.js","utils/actions.js","utils/reducers.js","utils/GlobalState.js","components/ProductItem/index.js","utils/queries.js","assets/spinner.gif","components/ProductList/index.js","components/CategoryMenu/index.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","pages/Home.js","pages/Detail.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/mutations.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","pages/Success.js","pages/OrderHistory.js","components/WishlistItem/index.js","components/WishlistList/index.js","pages/Wishlist.js","App.js","serviceWorker.js","index.js"],"names":["pluralize","name","count","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","_id","oncomplete","close","UPDATE_PRODUCTS","ADD_TO_WISHLIST","ADD_TO_CART","ADD_MULTIPLE_TO_CART","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","TOGGLE_CART","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","reducer","state","action","type","products","cartOpen","cart","product","wishlist","map","purchaseQuantity","newState","filter","length","categories","currentCategory","StoreContext","createContext","Provider","StoreProvider","value","initialState","props","useReducer","dispatch","useStoreContext","useContext","ProductItem","item","image","price","quantity","className","to","alt","src","onClick","itemInCart","find","cartItem","parseInt","QUERY_PRODUCTS","gql","QUERY_CHECKOUT","QUERY_CATEGORIES","QUERY_USER","ProductList","useQuery","loading","data","useEffect","forEach","then","category","spinner","CategoryMenu","categoryData","id","CartItem","placeholder","onChange","target","role","removeFromCart","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","stripePromise","loadStripe","Cart","useLazyQuery","getCheckout","toggleCart","res","redirectToCheckout","sessionId","checkout","session","getCart","sum","toFixed","calculateTotal","Auth","loggedIn","productIds","i","push","variables","Home","Detail","useParams","useState","currentProduct","setCurrentProduct","indexedProducts","description","disabled","p","Jumbotron","children","style","height","clear","paddingTop","textAlign","NoMatch","LOGIN","ADD_ORDER","ADD_USER","Login","email","password","formState","setFormState","useMutation","login","error","handleFormSubmit","event","preventDefault","mutationResponse","handleChange","onSubmit","htmlFor","Signup","addUser","firstName","lastName","Nav","href","logout","Success","addOrder","setTimeout","saveOrder","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","index","WishlistItem","Wishlist","WishlistList","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","path","element","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.03bef3d1.chunk.js","sourcesContent":["export function pluralize(name, count) {\n  if (count === 1) {\n    return name;\n  }\n  return name + 's';\n}\n\nexport function idbPromise(storeName, method, object) {\n  return new Promise((resolve, reject) => {\n    const request = window.indexedDB.open('shop-shop', 1);\n    let db, tx, store;\n    request.onupgradeneeded = function(e) {\n      const db = request.result;\n      db.createObjectStore('products', { keyPath: '_id' });\n      db.createObjectStore('categories', { keyPath: '_id' });\n      db.createObjectStore('cart', { keyPath: '_id' });\n    };\n\n    request.onerror = function(e) {\n      console.log('There was an error');\n    };\n\n    request.onsuccess = function(e) {\n      db = request.result;\n      tx = db.transaction(storeName, 'readwrite');\n      store = tx.objectStore(storeName);\n\n      db.onerror = function(e) {\n        console.log('error', e);\n      };\n\n      switch (method) {\n        case 'put':\n          store.put(object);\n          resolve(object);\n          break;\n        case 'get':\n          const all = store.getAll();\n          all.onsuccess = function() {\n            resolve(all.result);\n          };\n          break;\n        case 'delete':\n          store.delete(object._id);\n          break;\n        default:\n          console.log('No valid method');\n          break;\n      }\n\n      tx.oncomplete = function() {\n        db.close();\n      };\n    };\n  });\n}\n","export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\n\nexport const ADD_TO_WISHLIST = \"ADD_TO_WISHLIST\";\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\nexport const TOGGLE_CART = \"TOGGLE_CART\";\n\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\n","import { useReducer } from \"react\";\nimport {\n  UPDATE_PRODUCTS,\n  ADD_TO_WISHLIST,\n  ADD_TO_CART,\n  UPDATE_CART_QUANTITY,\n  REMOVE_FROM_CART,\n  ADD_MULTIPLE_TO_CART,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n  CLEAR_CART,\n  TOGGLE_CART\n} from \"./actions\";\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case UPDATE_PRODUCTS:\n      return {\n        ...state,\n        products: [...action.products],\n      };\n\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.product],\n      };\n\n    case ADD_TO_WISHLIST:\n      return {\n        ...state,\n        wishlist: [...state.wishlist, action.product],\n      };\n\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.products],\n      };\n\n    case UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: state.cart.map(product => {\n          if (action._id === product._id) {\n            product.purchaseQuantity = action.purchaseQuantity\n          }\n          return product\n        })\n      };\n\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter(product => {\n        return product._id !== action._id;\n      });\n\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState\n      };\n\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: []\n      };\n\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen\n      };\n\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories],\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport function useProductReducer(initialState) {\n  return useReducer(reducer, initialState)\n}\n","import React, { createContext, useContext } from \"react\";\nimport { useProductReducer } from './reducers'\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst StoreProvider = ({ value = [], ...props }) => {\n  const [state, dispatch] = useProductReducer({\n    products: [],\n    cart: [],\n    wishlist: [],\n    cartOpen: false,\n    categories: [],\n    currentCategory: '',\n  });\n\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { pluralize } from \"../../utils/helpers\"\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { ADD_TO_WISHLIST, ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nfunction ProductItem(item) {\n  const [state, dispatch] = useStoreContext();\n\n  const {\n    image,\n    name,\n    _id,\n    price,\n    quantity\n  } = item;\n\n  const { cart } = state\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\n    console.log(itemInCart)\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n    }\n  }\n\n  // const { wishlist } = state;\n\n  const addToWishList = ()=>{\n    // const iteminList = wishlist.find((listItem)=> listItem._id === _id)\n    console.log(\"added item to wishlist\");\n    // console.log(iteminList);\n   \n      dispatch({\n        type: ADD_TO_WISHLIST,\n        product: { ...item } \n      });\n      // idbPromise('wishlist', 'put', { ...item })\n      console.log(state)\n  }\n\n  return (\n    <div className=\"card px-1 py-1\">\n      <Link to={`/products/${_id}`}>\n        <img\n          alt={name}\n          src={`/images/${image}`}\n        />\n        <p>{name}</p>\n      </Link>\n      <div>\n        <div>{quantity} {pluralize(\"item\", quantity)} in stock</div>\n        <span>${price}</span>\n      </div>\n      <button onClick={addToWishList}>Add to Wish List</button>\n      <button onClick={addToCart}>Add to Cart</button>\n    </div>\n  );\n}\n\nexport default ProductItem;\n","import { gql } from '@apollo/client';\n\nexport const QUERY_PRODUCTS = gql`\n  query getProducts($category: ID) {\n    products(category: $category) {\n      _id\n      name\n      description\n      price\n      quantity\n      image\n      category {\n        _id\n      }\n      productTag {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($products: [ID]!) {\n    checkout(products: $products) {\n      session\n    }\n  }\n`;\n\nexport const QUERY_ALL_PRODUCTS = gql`\n  {\n    products {\n      _id\n      name\n      description\n      price\n      quantity\n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n  {\n    categories {\n      _id\n      name\n    }\n  }\n`;\n\nexport const QUERY_PRODUCTTAGS = gql`\n  {\n    productTag {\n      _id\n      name\n    }\n  }\n`\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      firstName\n      lastName\n      orders {\n        _id\n        purchaseDate\n        products {\n          _id\n          name\n          description\n          price\n          quantity\n          image\n        }\n      }\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/spinner.7e729fec.gif\";","import React, { useEffect } from 'react';\nimport ProductItem from '../ProductItem';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_PRODUCTS } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport spinner from '../../assets/spinner.gif';\n\nfunction ProductList() {\n  const [state, dispatch] = useStoreContext();\n\n  const { currentCategory } = state;\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    } else if (!loading) {\n      idbPromise('products', 'get').then((products) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products,\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n\n    return state.products.filter(\n      (product) => product.category._id === currentCategory\n    );\n  }\n\n  return (\n    <div className=\"my-2\">\n      <h2>Our Products:</h2>\n      {state.products.length ? (\n        <div className=\"flex-row\">\n          {filterProducts().map((product) => (\n            <ProductItem\n              key={product._id}\n              _id={product._id}\n              image={product.image}\n              name={product.name}\n              price={product.price}\n              quantity={product.quantity}\n            />\n          ))}\n        </div>\n      ) : (\n        <h3>You haven't added any products yet!</h3>\n      )}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n    </div>\n  );\n}\n\nexport default ProductList;\n","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport {\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n} from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\n\nfunction CategoryMenu() {\n  const [state, dispatch] = useStoreContext();\n\n  const { categories } = state;\n\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories,\n      });\n      categoryData.categories.forEach((category) => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then((categories) => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories,\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = (id) => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id,\n    });\n  };\n\n  return (\n    <div>\n      <h2>Choose a Category:</h2>\n      {categories.map((item) => (\n        <button\n          key={item._id}\n          onClick={() => {\n            handleClick(item._id);\n          }}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default CategoryMenu;\n","import React from 'react';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nconst CartItem = ({ item }) => {\n\n  const [, dispatch] = useStoreContext();\n\n  const removeFromCart = item => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id\n    });\n    idbPromise('cart', 'delete', { ...item });\n\n  };\n\n  const onChange = (e) => {\n    const value = e.target.value;\n    if (value === '0') {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id\n      });\n      idbPromise('cart', 'delete', { ...item });\n\n    } else {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: item._id,\n        purchaseQuantity: parseInt(value)\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\n\n    }\n  }\n\n  return (\n    <div className=\"flex-row\">\n      <div>\n        <img\n          src={`/images/${item.image}`}\n          alt=\"\"\n        />\n      </div>\n      <div>\n        <div>{item.name}, ${item.price}</div>\n        <div>\n          <span>Qty:</span>\n          <input\n            type=\"number\"\n            placeholder=\"1\"\n            value={item.purchaseQuantity}\n            onChange={onChange}\n          />\n          <span\n            role=\"img\"\n            aria-label=\"trash\"\n            onClick={() => removeFromCart(item)}\n          >\n            🗑️\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CartItem;\n","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useEffect } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/client';\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport CartItem from '../CartItem';\nimport Auth from '../../utils/auth';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\nimport './style.css';\n\n// stripePromise returns a promise with the stripe object as soon as the Stripe package loads\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst Cart = () => {\n  const [state, dispatch] = useStoreContext();\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\n  // We check to see if there is a data object that exists, if so this means that a checkout session was returned from the backend\n  // Then we should redirect to the checkout with a reference to our session id\n  useEffect(() => {\n    if (data) {\n      stripePromise.then((res) => {\n        res.redirectToCheckout({ sessionId: data.checkout.session });\n      });\n    }\n  }, [data]);\n\n  // If the cart's length or if the dispatch function is updated, check to see if the cart is empty.\n  // If so, invoke the getCart method and populate the cart with the existing from the session\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise('cart', 'get');\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\n    }\n\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n\n  function toggleCart() {\n    dispatch({ type: TOGGLE_CART });\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n    state.cart.forEach((item) => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  // When the submit checkout method is invoked, loop through each item in the cart\n  // Add each item id to the productIds array and then invoke the getCheckout query passing an object containing the id for all our products\n  function submitCheckout() {\n    const productIds = [];\n\n    state.cart.forEach((item) => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        productIds.push(item._id);\n      }\n    });\n\n    getCheckout({\n      variables: { products: productIds },\n    });\n  }\n\n  if (!state.cartOpen) {\n    return (\n      <div className=\"cart-closed\" onClick={toggleCart}>\n        <span role=\"img\" aria-label=\"trash\">\n          🛒\n        </span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"cart\">\n      <div className=\"close\" onClick={toggleCart}>\n        [close]\n      </div>\n      <h2>Shopping Cart</h2>\n      {state.cart.length ? (\n        <div>\n          {state.cart.map((item) => (\n            <CartItem key={item._id} item={item} />\n          ))}\n\n          <div className=\"flex-row space-between\">\n            <strong>Total: ${calculateTotal()}</strong>\n\n            {/* Check to see if the user is logged in. If so render a button to check out */}\n            {Auth.loggedIn() ? (\n              <button onClick={submitCheckout}>Checkout</button>\n            ) : (\n              <span>(log in to check out)</span>\n            )}\n          </div>\n        </div>\n      ) : (\n        <h3>\n          <span role=\"img\" aria-label=\"shocked\">\n            😱\n          </span>\n          You haven't added anything to your cart yet!\n        </h3>\n      )}\n    </div>\n  );\n};\n\nexport default Cart;\n","import React from \"react\";\nimport ProductList from \"../components/ProductList\";\nimport CategoryMenu from \"../components/CategoryMenu\";\nimport Cart from \"../components/Cart\";\n\nconst Home = () => {\n  return (\n    <div className=\"container\">\n      <CategoryMenu />\n      <ProductList />\n      <Cart />\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport Cart from '../components/Cart';\nimport { useStoreContext } from '../utils/GlobalState';\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from '../utils/actions';\nimport { QUERY_PRODUCTS } from '../utils/queries';\nimport { idbPromise } from '../utils/helpers';\nimport spinner from '../assets/spinner.gif';\n\nfunction Detail() {\n  const [state, dispatch] = useStoreContext();\n  const { id } = useParams();\n\n  const [currentProduct, setCurrentProduct] = useState({});\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  const { products, cart } = state;\n\n  useEffect(() => {\n    // already in global store\n    if (products.length) {\n      setCurrentProduct(products.find((product) => product._id === id));\n    }\n    // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise('products', 'get').then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts,\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct, purchaseQuantity: 1 },\n      });\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id,\n    });\n\n    idbPromise('cart', 'delete', { ...currentProduct });\n  };\n\n  return (\n    <>\n      {currentProduct && cart ? (\n        <div className=\"container my-1\">\n          <Link to=\"/\">← Back to Products</Link>\n\n          <h2>{currentProduct.name}</h2>\n\n          <p>{currentProduct.description}</p>\n\n          <p>\n            <strong>Price:</strong>${currentProduct.price}{' '}\n            <button onClick={addToCart}>Add to Cart</button>\n            <button\n              disabled={!cart.find((p) => p._id === currentProduct._id)}\n              onClick={removeFromCart}\n            >\n              Remove from Cart\n            </button>\n          </p>\n\n          <img\n            src={`/images/${currentProduct.image}`}\n            alt={currentProduct.name}\n          />\n        </div>\n      ) : null}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n      <Cart />\n    </>\n  );\n}\n\nexport default Detail;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($products: [ID]!) {\n    addOrder(products: $products) {\n      purchaseDate\n      products {\n        _id\n        name\n        description\n        price\n        quantity\n        category {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/signup\">← Go to Signup</Link>\n\n      <h2>Login</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/login\">← Go to Login</Link>\n\n      <h2>Signup</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\n\nfunction Nav() {\n\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/orderHistory\">\n              Order History\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/wishlist\">\n              Wishlist\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/signup\">\n              Signup\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <header className=\"flex-row px-1\">\n      <h1>\n        <Link to=\"/\">\n          <span role=\"img\" aria-label=\"shopping bag\">🛍️</span>\n          -Eric's-Emporium\n        </Link>\n      </h1>\n\n      <nav>\n        {showNavigation()}\n      </nav>\n    </header>\n  );\n}\n\nexport default Nav;\n","import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport Jumbotron from '../components/Jumbotron';\nimport { ADD_ORDER } from '../utils/mutations';\nimport { idbPromise } from '../utils/helpers';\n\nfunction Success() {\n  const [addOrder] = useMutation(ADD_ORDER);\n\n  useEffect(() => {\n    async function saveOrder() {\n      const cart = await idbPromise('cart', 'get');\n      const products = cart.map((item) => item._id);\n\n      if (products.length) {\n        const { data } = await addOrder({ variables: { products } });\n        const productData = data.addOrder.products;\n\n        productData.forEach((item) => {\n          idbPromise('cart', 'delete', item);\n        });\n      }\n\n      setTimeout(() => {\n        window.location.assign('/');\n      }, 3000);\n    }\n\n    saveOrder();\n  }, [addOrder]);\n\n  return (\n    <div>\n      <Jumbotron>\n        <h1>Success!</h1>\n        <h2>Thank you for your purchase!</h2>\n        <h2>You will now be redirected to the home page</h2>\n      </Jumbotron>\n    </div>\n  );\n}\n\nexport default Success;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../utils/queries';\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/\">← Back to Products</Link>\n\n        {user ? (\n          <>\n            <h2>\n              Order History for {user.firstName} {user.lastName}\n            </h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h3>\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\n                </h3>\n                <div className=\"flex-row\">\n                  {order.products.map(({ _id, image, name, price }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/products/${_id}`}>\n                        <img alt={name} src={`/images/${image}`} />\n                        <p>{name}</p>\n                      </Link>\n                      <div>\n                        <span>${price}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default OrderHistory;\n","import React from 'react';\n// import { useStoreContext } from \"../../utils/GlobalState\";\n\nconst WishlistItem = ({ item })=>{\n\n//   const [, dispatch] = useStoreContext();\n\n// REMOVE_FROM_WISHLIST\n\n// UPDATE_WISHLIST_QUANTITY\n\n// \n\n\n\n  return (\n    <div className=\"flex-row\">\n      <div>\n        <img\n          src={`/images/${item.image}`}\n          alt=\"\"\n        />\n      </div>\n      <div>\n        <div>{item.name}, ${item.price}</div>\n        <div>\n          <span>Qty:</span>\n          <input\n            type=\"number\"\n            placeholder=\"1\"\n            // onChange={onChange}\n          />\n          <span\n            role=\"img\"\n            aria-label=\"trash\"\n            // onClick={() => removeFromCart(item)}\n          >\n            🗑️\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default WishlistItem;\n","import { useStoreContext } from '../../utils/GlobalState';\nimport React from 'react';\nimport WishlistItem from '../WishlistItem';\n\nconst Wishlist = () => {\n\n  const [state] = useStoreContext();\n\n\n    function calculateTotal() {\n        let sum = 0;\n        state.wishlist.forEach((item) => {\n          sum += item.price;\n        });\n        return sum.toFixed(2);\n      }\n\n      console.log(state)\n    return (\n        <div className=\"\">\n        \n        <h2>Wishlist</h2>\n        {state.wishlist.length ? (\n          <div>\n            {state.wishlist.map((item) => (\n              <WishlistItem key={item._id} item={item} />\n            ))}\n  \n            <div className=\"flex-row space-between\">\n              <strong>Total: ${calculateTotal()}</strong>\n            </div>\n          </div>\n        ) : (\n          <h3>\n            <span role=\"img\" aria-label=\"shocked\">\n              😱\n            </span>\n            You haven't added anything to your wishlist yet!\n          </h3>\n        )}\n      </div>\n    )\n\n}\n\nexport default Wishlist;","import React from \"react\";\nimport { Link } from 'react-router-dom';\n\nimport WishlistList from \"../components/WishlistList\";\n\nconst Wishlist = () => {\n    return (\n        <>\n            <div className=\"container my-1\">\n                <Link to=\"/\">← Back to Products</Link>\n           \n                <div>\n                    <WishlistList />\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Wishlist;","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nimport Home from './pages/Home';\nimport Detail from './pages/Detail';\nimport NoMatch from './pages/NoMatch';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Nav from './components/Nav';\nimport { StoreProvider } from './utils/GlobalState';\nimport Success from './pages/Success';\nimport OrderHistory from './pages/OrderHistory';\nimport Wishlist from './pages/Wishlist';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <StoreProvider>\n            <Nav />\n            <Routes>\n              <Route \n                path=\"/\" \n                element={<Home />} \n              />\n              <Route \n                path=\"/login\" \n                element={<Login />} \n              />\n              <Route \n                path=\"/signup\" \n                element={<Signup />} \n              />\n              <Route \n                path=\"/success\" \n                element={<Success />} \n              />\n              <Route \n                path=\"/orderHistory\" \n                element={<OrderHistory />} \n              />\n              <Route \n                path=\"/products/:id\" \n                element={<Detail />} \n              />\n              <Route\n                path='/wishlist'\n                element={<Wishlist/>} \n              />\n              <Route \n                path=\"*\" \n                element={<NoMatch />} \n              />\n            </Routes>\n          </StoreProvider>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}