{"version":3,"sources":["utils/mutations.js","utils/helpers.js","utils/actions.js","utils/reducers.js","utils/GlobalState.js","components/ProductItem/index.js","utils/queries.js","assets/spinner.gif","components/ProductList/index.js","components/CategoryMenu/index.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","pages/Home.js","pages/Detail.js","components/Jumbotron/index.js","pages/NoMatch.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","pages/Success.js","pages/OrderHistory.js","pages/Wishlist.js","App.js","serviceWorker.js","index.js"],"names":["LOGIN","gql","ADD_ORDER","ADD_USER","ADD_TO_WISHLIST","pluralize","name","count","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","_id","oncomplete","close","UPDATE_PRODUCTS","ADD_TO_CART","ADD_MULTIPLE_TO_CART","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","TOGGLE_CART","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","reducer","state","action","type","products","cartOpen","cart","product","wishlist","map","purchaseQuantity","newState","filter","length","categories","currentCategory","StoreContext","createContext","Provider","StoreProvider","value","initialState","props","useReducer","dispatch","useStoreContext","useContext","ProductItem","item","useMutation","addItem","image","error","price","quantity","category","addToWishList","variables","data","className","to","alt","src","onClick","itemInCart","find","cartItem","parseInt","QUERY_PRODUCTS","QUERY_CHECKOUT","QUERY_CATEGORIES","QUERY_USER","QUERY_WISHLIST","ProductList","useQuery","loading","useEffect","forEach","then","spinner","CategoryMenu","categoryData","id","CartItem","placeholder","onChange","target","role","removeFromCart","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","stripePromise","loadStripe","Cart","useLazyQuery","getCheckout","toggleCart","res","redirectToCheckout","sessionId","checkout","session","getCart","sum","toFixed","calculateTotal","Auth","loggedIn","productIds","i","push","Home","Detail","useParams","useState","currentProduct","setCurrentProduct","indexedProducts","description","disabled","p","Jumbotron","children","style","height","clear","paddingTop","textAlign","NoMatch","Login","email","password","formState","setFormState","login","handleFormSubmit","event","preventDefault","mutationResponse","handleChange","onSubmit","htmlFor","Signup","addUser","firstName","lastName","Nav","href","logout","Success","addOrder","setTimeout","saveOrder","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","index","Wishlist","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","path","element","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.43a1e3eb.chunk.js","sourcesContent":["import { gql } from '@apollo/client';\r\n\r\nexport const LOGIN = gql`\r\n  mutation login($email: String!, $password: String!) {\r\n    login(email: $email, password: $password) {\r\n      token\r\n      user {\r\n        _id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_ORDER = gql`\r\n  mutation addOrder($products: [ID]!) {\r\n    addOrder(products: $products) {\r\n      purchaseDate\r\n      products {\r\n        _id\r\n        name\r\n        description\r\n        price\r\n        quantity\r\n        category {\r\n          name\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_USER = gql`\r\n  mutation addUser(\r\n    $firstName: String!\r\n    $lastName: String!\r\n    $email: String!\r\n    $password: String!\r\n  ) {\r\n    addUser(\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      email: $email\r\n      password: $password\r\n    ) {\r\n      token\r\n      user {\r\n        _id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_TO_WISHLIST = gql `\r\n  mutation addToWishList ($name: String!, $price: Float!, $category: String! ){\r\n    addToWishList(name: $name, price: $price, category: $category){\r\n      _id\r\n      firstName\r\n      lastName\r\n      email\r\n      wishlist {\r\n        name\r\n        price\r\n        category {\r\n          _id\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;","export function pluralize(name, count) {\r\n  if (count === 1) {\r\n    return name;\r\n  }\r\n  return name + 's';\r\n}\r\n\r\nexport function idbPromise(storeName, method, object) {\r\n  return new Promise((resolve, reject) => {\r\n    const request = window.indexedDB.open('shop-shop', 1);\r\n    let db, tx, store;\r\n    request.onupgradeneeded = function(e) {\r\n      const db = request.result;\r\n      db.createObjectStore('products', { keyPath: '_id' });\r\n      db.createObjectStore('categories', { keyPath: '_id' });\r\n      db.createObjectStore('cart', { keyPath: '_id' });\r\n    };\r\n\r\n    request.onerror = function(e) {\r\n      console.log('There was an error');\r\n    };\r\n\r\n    request.onsuccess = function(e) {\r\n      db = request.result;\r\n      tx = db.transaction(storeName, 'readwrite');\r\n      store = tx.objectStore(storeName);\r\n\r\n      db.onerror = function(e) {\r\n        console.log('error', e);\r\n      };\r\n\r\n      switch (method) {\r\n        case 'put':\r\n          store.put(object);\r\n          resolve(object);\r\n          break;\r\n        case 'get':\r\n          const all = store.getAll();\r\n          all.onsuccess = function() {\r\n            resolve(all.result);\r\n          };\r\n          break;\r\n        case 'delete':\r\n          store.delete(object._id);\r\n          break;\r\n        default:\r\n          console.log('No valid method');\r\n          break;\r\n      }\r\n\r\n      tx.oncomplete = function() {\r\n        db.close();\r\n      };\r\n    };\r\n  });\r\n}\r\n","export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\r\n\r\nexport const ADD_TO_WISHLIST = \"ADD_TO_WISHLIST\";\r\nexport const ADD_TO_CART = \"ADD_TO_CART\";\r\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\r\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\r\nexport const CLEAR_CART = \"CLEAR_CART\";\r\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\r\nexport const TOGGLE_CART = \"TOGGLE_CART\";\r\n\r\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\r\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\r\n","import { useReducer } from \"react\";\r\nimport {\r\n  UPDATE_PRODUCTS,\r\n  ADD_TO_WISHLIST,\r\n  ADD_TO_CART,\r\n  UPDATE_CART_QUANTITY,\r\n  REMOVE_FROM_CART,\r\n  ADD_MULTIPLE_TO_CART,\r\n  UPDATE_CATEGORIES,\r\n  UPDATE_CURRENT_CATEGORY,\r\n  CLEAR_CART,\r\n  TOGGLE_CART\r\n} from \"./actions\";\r\n\r\nexport const reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_PRODUCTS:\r\n      return {\r\n        ...state,\r\n        products: [...action.products],\r\n      };\r\n\r\n    case ADD_TO_CART:\r\n      return {\r\n        ...state,\r\n        cartOpen: true,\r\n        cart: [...state.cart, action.product],\r\n      };\r\n\r\n    case ADD_TO_WISHLIST:\r\n      return {\r\n        ...state,\r\n        wishlist: [...state.wishlist, action.product],\r\n      };\r\n\r\n    case ADD_MULTIPLE_TO_CART:\r\n      return {\r\n        ...state,\r\n        cart: [...state.cart, ...action.products],\r\n      };\r\n\r\n    case UPDATE_CART_QUANTITY:\r\n      return {\r\n        ...state,\r\n        cartOpen: true,\r\n        cart: state.cart.map(product => {\r\n          if (action._id === product._id) {\r\n            product.purchaseQuantity = action.purchaseQuantity\r\n          }\r\n          return product\r\n        })\r\n      };\r\n\r\n    case REMOVE_FROM_CART:\r\n      let newState = state.cart.filter(product => {\r\n        return product._id !== action._id;\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        cartOpen: newState.length > 0,\r\n        cart: newState\r\n      };\r\n\r\n    case CLEAR_CART:\r\n      return {\r\n        ...state,\r\n        cartOpen: false,\r\n        cart: []\r\n      };\r\n\r\n    case TOGGLE_CART:\r\n      return {\r\n        ...state,\r\n        cartOpen: !state.cartOpen\r\n      };\r\n\r\n    case UPDATE_CATEGORIES:\r\n      return {\r\n        ...state,\r\n        categories: [...action.categories],\r\n      };\r\n\r\n    case UPDATE_CURRENT_CATEGORY:\r\n      return {\r\n        ...state,\r\n        currentCategory: action.currentCategory\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport function useProductReducer(initialState) {\r\n  return useReducer(reducer, initialState)\r\n}\r\n","import React, { createContext, useContext } from \"react\";\r\nimport { useProductReducer } from './reducers'\r\n\r\nconst StoreContext = createContext();\r\nconst { Provider } = StoreContext;\r\n\r\nconst StoreProvider = ({ value = [], ...props }) => {\r\n  const [state, dispatch] = useProductReducer({\r\n    products: [],\r\n    cart: [],\r\n    wishlist: [],\r\n    cartOpen: false,\r\n    categories: [],\r\n    currentCategory: '',\r\n  });\r\n\r\n  return <Provider value={[state, dispatch]} {...props} />;\r\n};\r\n\r\nconst useStoreContext = () => {\r\n  return useContext(StoreContext);\r\n};\r\n\r\nexport { StoreProvider, useStoreContext };\r\n","import React from \"react\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { ADD_TO_WISHLIST } from \"../../utils/mutations\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { pluralize } from \"../../utils/helpers\"\r\nimport { useStoreContext } from \"../../utils/GlobalState\";\r\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\r\nimport { idbPromise } from \"../../utils/helpers\";\r\n\r\nfunction ProductItem(item) {\r\n  const [state, dispatch] = useStoreContext();\r\n  const [addItem, { error }] = useMutation(ADD_TO_WISHLIST);\r\n  const {\r\n    image,\r\n    name,\r\n    _id,\r\n    price,\r\n    quantity,\r\n    category\r\n  } = item;\r\n\r\n  const { cart } = state\r\n\r\n  const addToCart = () => {\r\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\r\n    console.log(itemInCart)\r\n    if (itemInCart) {\r\n      dispatch({\r\n        type: UPDATE_CART_QUANTITY,\r\n        _id: _id,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\r\n      });\r\n      idbPromise('cart', 'put', {\r\n        ...itemInCart,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: ADD_TO_CART,\r\n        product: { ...item, purchaseQuantity: 1 }\r\n      });\r\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\r\n    }\r\n  }\r\n\r\n  const addToWishList = async ()=>{\r\n\r\n    try {\r\n      const { data } = await addItem({\r\n        variables: {\r\n          name,\r\n          price,\r\n          category\r\n        },\r\n      })\r\n    } catch ( error ){\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"card px-1 py-1\">\r\n      <Link to={`/products/${_id}`}>\r\n        <img\r\n          alt={name}\r\n          src={`/images/${image}`}\r\n        />\r\n        <p>{name}</p>\r\n      </Link>\r\n      <div>\r\n        <div>{quantity} {pluralize(\"item\", quantity)} in stock</div>\r\n        <span>${price}</span>\r\n      </div>\r\n      <button onClick={addToWishList}>Add to Wish List</button>\r\n      <button onClick={addToCart}>Add to Cart</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductItem;\r\n","import { gql } from '@apollo/client';\r\n\r\nexport const QUERY_PRODUCTS = gql`\r\n  query getProducts($category: ID) {\r\n    products(category: $category) {\r\n      _id\r\n      name\r\n      description\r\n      price\r\n      quantity\r\n      image\r\n      category {\r\n        _id\r\n      }\r\n      productTag {\r\n        _id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_CHECKOUT = gql`\r\n  query getCheckout($products: [ID]!) {\r\n    checkout(products: $products) {\r\n      session\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_ALL_PRODUCTS = gql`\r\n  {\r\n    products {\r\n      _id\r\n      name\r\n      description\r\n      price\r\n      quantity\r\n      category {\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_CATEGORIES = gql`\r\n  {\r\n    categories {\r\n      _id\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_PRODUCTTAGS = gql`\r\n  {\r\n    productTag {\r\n      _id\r\n      name\r\n    }\r\n  }\r\n`\r\n\r\nexport const QUERY_USER = gql`\r\n  {\r\n    user {\r\n      firstName\r\n      lastName\r\n      orders {\r\n        _id\r\n        purchaseDate\r\n        products {\r\n          _id\r\n          name\r\n          description\r\n          price\r\n          quantity\r\n          image\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// Could be a problem\r\nexport const QUERY_WISHLIST = gql`\r\n  query wishlist {\r\n    wishlist {\r\n      _id\r\n      firstName\r\n      lastName\r\n      email\r\n      wishlist {\r\n        _id\r\n        name\r\n        description\r\n        price\r\n        quantity\r\n        image\r\n      }\r\n    }\r\n  }\r\n`;","export default __webpack_public_path__ + \"static/media/spinner.7e729fec.gif\";","import React, { useEffect } from 'react';\r\nimport ProductItem from '../ProductItem';\r\nimport { useStoreContext } from '../../utils/GlobalState';\r\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\r\nimport { useQuery } from '@apollo/client';\r\nimport { QUERY_PRODUCTS } from '../../utils/queries';\r\nimport { idbPromise } from '../../utils/helpers';\r\nimport spinner from '../../assets/spinner.gif';\r\n\r\nfunction ProductList() {\r\n  const [state, dispatch] = useStoreContext();\r\n\r\n  const { currentCategory } = state;\r\n\r\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      dispatch({\r\n        type: UPDATE_PRODUCTS,\r\n        products: data.products,\r\n      });\r\n      data.products.forEach((product) => {\r\n        idbPromise('products', 'put', product);\r\n      });\r\n    } else if (!loading) {\r\n      idbPromise('products', 'get').then((products) => {\r\n        dispatch({\r\n          type: UPDATE_PRODUCTS,\r\n          products: products,\r\n        });\r\n      });\r\n    }\r\n  }, [data, loading, dispatch]);\r\n\r\n  function filterProducts() {\r\n    if (!currentCategory) {\r\n      return state.products;\r\n    }\r\n\r\n    return state.products.filter(\r\n      (product) => product.category._id === currentCategory\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"my-2\">\r\n      <h2>Our Products:</h2>\r\n      {state.products.length ? (\r\n        <div className=\"flex-row\">\r\n          {filterProducts().map((product) => (\r\n            <ProductItem\r\n              key={product._id}\r\n              _id={product._id}\r\n              image={product.image}\r\n              name={product.name}\r\n              price={product.price}\r\n              quantity={product.quantity}\r\n              category={product.category._id}\r\n            />\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <h3>You haven't added any products yet!</h3>\r\n      )}\r\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductList;\r\n","import React, { useEffect } from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport { useStoreContext } from '../../utils/GlobalState';\r\nimport {\r\n  UPDATE_CATEGORIES,\r\n  UPDATE_CURRENT_CATEGORY,\r\n} from '../../utils/actions';\r\nimport { QUERY_CATEGORIES } from '../../utils/queries';\r\nimport { idbPromise } from '../../utils/helpers';\r\n\r\nfunction CategoryMenu() {\r\n  const [state, dispatch] = useStoreContext();\r\n\r\n  const { categories } = state;\r\n\r\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\r\n\r\n  useEffect(() => {\r\n    if (categoryData) {\r\n      dispatch({\r\n        type: UPDATE_CATEGORIES,\r\n        categories: categoryData.categories,\r\n      });\r\n      categoryData.categories.forEach((category) => {\r\n        idbPromise('categories', 'put', category);\r\n      });\r\n    } else if (!loading) {\r\n      idbPromise('categories', 'get').then((categories) => {\r\n        dispatch({\r\n          type: UPDATE_CATEGORIES,\r\n          categories: categories,\r\n        });\r\n      });\r\n    }\r\n  }, [categoryData, loading, dispatch]);\r\n\r\n  const handleClick = (id) => {\r\n    dispatch({\r\n      type: UPDATE_CURRENT_CATEGORY,\r\n      currentCategory: id,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Choose a Category:</h2>\r\n      {categories.map((item) => (\r\n        <button\r\n          key={item._id}\r\n          onClick={() => {\r\n            handleClick(item._id);\r\n          }}\r\n        >\r\n          {item.name}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CategoryMenu;\r\n","import React from 'react';\r\nimport { useStoreContext } from \"../../utils/GlobalState\";\r\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\r\nimport { idbPromise } from \"../../utils/helpers\";\r\n\r\nconst CartItem = ({ item }) => {\r\n\r\n  const [, dispatch] = useStoreContext();\r\n\r\n  const removeFromCart = item => {\r\n    dispatch({\r\n      type: REMOVE_FROM_CART,\r\n      _id: item._id\r\n    });\r\n    idbPromise('cart', 'delete', { ...item });\r\n\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    const value = e.target.value;\r\n    if (value === '0') {\r\n      dispatch({\r\n        type: REMOVE_FROM_CART,\r\n        _id: item._id\r\n      });\r\n      idbPromise('cart', 'delete', { ...item });\r\n\r\n    } else {\r\n      dispatch({\r\n        type: UPDATE_CART_QUANTITY,\r\n        _id: item._id,\r\n        purchaseQuantity: parseInt(value)\r\n      });\r\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\r\n\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex-row\">\r\n      <div>\r\n        <img\r\n          src={`/images/${item.image}`}\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <div>{item.name}, ${item.price}</div>\r\n        <div>\r\n          <span>Qty:</span>\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"1\"\r\n            value={item.purchaseQuantity}\r\n            onChange={onChange}\r\n          />\r\n          <span\r\n            role=\"img\"\r\n            aria-label=\"trash\"\r\n            onClick={() => removeFromCart(item)}\r\n          >\r\n            🗑️\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CartItem;\r\n","import decode from 'jwt-decode';\r\n\r\nclass AuthService {\r\n  getProfile() {\r\n    return decode(this.getToken());\r\n  }\r\n\r\n  loggedIn() {\r\n    // Checks if there is a saved token and it's still valid\r\n    const token = this.getToken();\r\n    return !!token && !this.isTokenExpired(token);\r\n  }\r\n\r\n  isTokenExpired(token) {\r\n    try {\r\n      const decoded = decode(token);\r\n      if (decoded.exp < Date.now() / 1000) {\r\n        return true;\r\n      } else return false;\r\n    } catch (err) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  getToken() {\r\n    // Retrieves the user token from localStorage\r\n    return localStorage.getItem('id_token');\r\n  }\r\n\r\n  login(idToken) {\r\n    // Saves user token to localStorage\r\n    localStorage.setItem('id_token', idToken);\r\n\r\n    window.location.assign('/');\r\n  }\r\n\r\n  logout() {\r\n    // Clear user token and profile data from localStorage\r\n    localStorage.removeItem('id_token');\r\n    // this will reload the page and reset the state of the application\r\n    window.location.assign('/');\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import React, { useEffect } from 'react';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport { useLazyQuery } from '@apollo/client';\r\nimport { QUERY_CHECKOUT } from '../../utils/queries';\r\nimport { idbPromise } from '../../utils/helpers';\r\nimport CartItem from '../CartItem';\r\nimport Auth from '../../utils/auth';\r\nimport { useStoreContext } from '../../utils/GlobalState';\r\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\r\nimport './style.css';\r\n\r\n// stripePromise returns a promise with the stripe object as soon as the Stripe package loads\r\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\r\n\r\nconst Cart = () => {\r\n  const [state, dispatch] = useStoreContext();\r\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\r\n\r\n  // We check to see if there is a data object that exists, if so this means that a checkout session was returned from the backend\r\n  // Then we should redirect to the checkout with a reference to our session id\r\n  useEffect(() => {\r\n    if (data) {\r\n      stripePromise.then((res) => {\r\n        res.redirectToCheckout({ sessionId: data.checkout.session });\r\n      });\r\n    }\r\n  }, [data]);\r\n\r\n  // If the cart's length or if the dispatch function is updated, check to see if the cart is empty.\r\n  // If so, invoke the getCart method and populate the cart with the existing from the session\r\n  useEffect(() => {\r\n    async function getCart() {\r\n      const cart = await idbPromise('cart', 'get');\r\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\r\n    }\r\n\r\n    if (!state.cart.length) {\r\n      getCart();\r\n    }\r\n  }, [state.cart.length, dispatch]);\r\n\r\n  function toggleCart() {\r\n    dispatch({ type: TOGGLE_CART });\r\n  }\r\n\r\n  function calculateTotal() {\r\n    let sum = 0;\r\n    state.cart.forEach((item) => {\r\n      sum += item.price * item.purchaseQuantity;\r\n    });\r\n    return sum.toFixed(2);\r\n  }\r\n\r\n  // When the submit checkout method is invoked, loop through each item in the cart\r\n  // Add each item id to the productIds array and then invoke the getCheckout query passing an object containing the id for all our products\r\n  function submitCheckout() {\r\n    const productIds = [];\r\n\r\n    state.cart.forEach((item) => {\r\n      for (let i = 0; i < item.purchaseQuantity; i++) {\r\n        productIds.push(item._id);\r\n      }\r\n    });\r\n\r\n    getCheckout({\r\n      variables: { products: productIds },\r\n    });\r\n  }\r\n\r\n  if (!state.cartOpen) {\r\n    return (\r\n      <div className=\"cart-closed\" onClick={toggleCart}>\r\n        <span role=\"img\" aria-label=\"trash\">\r\n          🛒\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"cart\">\r\n      <div className=\"close\" onClick={toggleCart}>\r\n        [close]\r\n      </div>\r\n      <h2>Shopping Cart</h2>\r\n      {state.cart.length ? (\r\n        <div>\r\n          {state.cart.map((item) => (\r\n            <CartItem key={item._id} item={item} />\r\n          ))}\r\n\r\n          <div className=\"flex-row space-between\">\r\n            <strong>Total: ${calculateTotal()}</strong>\r\n\r\n            {/* Check to see if the user is logged in. If so render a button to check out */}\r\n            {Auth.loggedIn() ? (\r\n              <button onClick={submitCheckout}>Checkout</button>\r\n            ) : (\r\n              <span>(log in to check out)</span>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <h3>\r\n          <span role=\"img\" aria-label=\"shocked\">\r\n            😱\r\n          </span>\r\n          You haven't added anything to your cart yet!\r\n        </h3>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","import React from \"react\";\r\nimport ProductList from \"../components/ProductList\";\r\nimport CategoryMenu from \"../components/CategoryMenu\";\r\nimport Cart from \"../components/Cart\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <CategoryMenu />\r\n      <ProductList />\r\n      <Cart />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/client';\r\n\r\nimport Cart from '../components/Cart';\r\nimport { useStoreContext } from '../utils/GlobalState';\r\nimport {\r\n  REMOVE_FROM_CART,\r\n  UPDATE_CART_QUANTITY,\r\n  ADD_TO_CART,\r\n  UPDATE_PRODUCTS,\r\n} from '../utils/actions';\r\nimport { QUERY_PRODUCTS } from '../utils/queries';\r\nimport { idbPromise } from '../utils/helpers';\r\nimport spinner from '../assets/spinner.gif';\r\n\r\nfunction Detail() {\r\n  const [state, dispatch] = useStoreContext();\r\n  const { id } = useParams();\r\n\r\n  const [currentProduct, setCurrentProduct] = useState({});\r\n\r\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\r\n\r\n  const { products, cart } = state;\r\n\r\n  useEffect(() => {\r\n    // already in global store\r\n    if (products.length) {\r\n      setCurrentProduct(products.find((product) => product._id === id));\r\n    }\r\n    // retrieved from server\r\n    else if (data) {\r\n      dispatch({\r\n        type: UPDATE_PRODUCTS,\r\n        products: data.products,\r\n      });\r\n\r\n      data.products.forEach((product) => {\r\n        idbPromise('products', 'put', product);\r\n      });\r\n    }\r\n    // get cache from idb\r\n    else if (!loading) {\r\n      idbPromise('products', 'get').then((indexedProducts) => {\r\n        dispatch({\r\n          type: UPDATE_PRODUCTS,\r\n          products: indexedProducts,\r\n        });\r\n      });\r\n    }\r\n  }, [products, data, loading, dispatch, id]);\r\n\r\n  const addToCart = () => {\r\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\r\n    if (itemInCart) {\r\n      dispatch({\r\n        type: UPDATE_CART_QUANTITY,\r\n        _id: id,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\r\n      });\r\n      idbPromise('cart', 'put', {\r\n        ...itemInCart,\r\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: ADD_TO_CART,\r\n        product: { ...currentProduct, purchaseQuantity: 1 },\r\n      });\r\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\r\n    }\r\n  };\r\n\r\n  const removeFromCart = () => {\r\n    dispatch({\r\n      type: REMOVE_FROM_CART,\r\n      _id: currentProduct._id,\r\n    });\r\n\r\n    idbPromise('cart', 'delete', { ...currentProduct });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {currentProduct && cart ? (\r\n        <div className=\"container my-1\">\r\n          <Link to=\"/\">← Back to Products</Link>\r\n\r\n          <h2>{currentProduct.name}</h2>\r\n\r\n          <p>{currentProduct.description}</p>\r\n\r\n          <p>\r\n            <strong>Price:</strong>${currentProduct.price}{' '}\r\n            <button onClick={addToCart}>Add to Cart</button>\r\n            <button\r\n              disabled={!cart.find((p) => p._id === currentProduct._id)}\r\n              onClick={removeFromCart}\r\n            >\r\n              Remove from Cart\r\n            </button>\r\n          </p>\r\n\r\n          <img\r\n            src={`/images/${currentProduct.image}`}\r\n            alt={currentProduct.name}\r\n          />\r\n        </div>\r\n      ) : null}\r\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\r\n      <Cart />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Detail;\r\n","import React from \"react\";\r\n\r\nfunction Jumbotron({ children }) {\r\n  return (\r\n    <div\r\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Jumbotron;\r\n","import React from \"react\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\n\r\nconst NoMatch = () => {\r\n  return (\r\n    <div>\r\n      <Jumbotron>\r\n        <h1>404 Page Not Found</h1>\r\n        <h1>\r\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\r\n            🙄\r\n          </span>\r\n        </h1>\r\n      </Jumbotron>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoMatch;\r\n","import React, { useState } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport { Link } from 'react-router-dom';\r\nimport { LOGIN } from '../utils/mutations';\r\nimport Auth from '../utils/auth';\r\n\r\nfunction Login(props) {\r\n  const [formState, setFormState] = useState({ email: '', password: '' });\r\n  const [login, { error }] = useMutation(LOGIN);\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const mutationResponse = await login({\r\n        variables: { email: formState.email, password: formState.password },\r\n      });\r\n      const token = mutationResponse.data.login.token;\r\n      Auth.login(token);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container my-1\">\r\n      <Link to=\"/signup\">← Go to Signup</Link>\r\n\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleFormSubmit}>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"email\">Email address:</label>\r\n          <input\r\n            placeholder=\"youremail@test.com\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            id=\"email\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"pwd\">Password:</label>\r\n          <input\r\n            placeholder=\"******\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            id=\"pwd\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        {error ? (\r\n          <div>\r\n            <p className=\"error-text\">The provided credentials are incorrect</p>\r\n          </div>\r\n        ) : null}\r\n        <div className=\"flex-row flex-end\">\r\n          <button type=\"submit\">Submit</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/client';\r\nimport Auth from '../utils/auth';\r\nimport { ADD_USER } from '../utils/mutations';\r\n\r\nfunction Signup(props) {\r\n  const [formState, setFormState] = useState({ email: '', password: '' });\r\n  const [addUser] = useMutation(ADD_USER);\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const mutationResponse = await addUser({\r\n      variables: {\r\n        email: formState.email,\r\n        password: formState.password,\r\n        firstName: formState.firstName,\r\n        lastName: formState.lastName,\r\n      },\r\n    });\r\n    const token = mutationResponse.data.addUser.token;\r\n    Auth.login(token);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container my-1\">\r\n      <Link to=\"/login\">← Go to Login</Link>\r\n\r\n      <h2>Signup</h2>\r\n      <form onSubmit={handleFormSubmit}>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"firstName\">First Name:</label>\r\n          <input\r\n            placeholder=\"First\"\r\n            name=\"firstName\"\r\n            type=\"firstName\"\r\n            id=\"firstName\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"lastName\">Last Name:</label>\r\n          <input\r\n            placeholder=\"Last\"\r\n            name=\"lastName\"\r\n            type=\"lastName\"\r\n            id=\"lastName\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input\r\n            placeholder=\"youremail@test.com\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            id=\"email\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row space-between my-2\">\r\n          <label htmlFor=\"pwd\">Password:</label>\r\n          <input\r\n            placeholder=\"******\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            id=\"pwd\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"flex-row flex-end\">\r\n          <button type=\"submit\">Submit</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n","import React from \"react\";\r\nimport Auth from \"../../utils/auth\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Nav() {\r\n\r\n  function showNavigation() {\r\n    if (Auth.loggedIn()) {\r\n      return (\r\n        <ul className=\"flex-row\">\r\n          <li className=\"mx-1\">\r\n            <Link to=\"/orderHistory\">\r\n              Order History\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/wishlist\">\r\n              Wishlist\r\n            </Link>\r\n          </li>\r\n          <li className=\"mx-1\">\r\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\r\n            <a href=\"/\" onClick={() => Auth.logout()}>\r\n              Logout\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      );\r\n    } else {\r\n      return (\r\n        <ul className=\"flex-row\">\r\n          <li className=\"mx-1\">\r\n            <Link to=\"/signup\">\r\n              Signup\r\n            </Link>\r\n          </li>\r\n          <li className=\"mx-1\">\r\n            <Link to=\"/login\">\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <header className=\"flex-row px-1\">\r\n      <h1>\r\n        <Link to=\"/\">\r\n          <span role=\"img\" aria-label=\"shopping bag\">🛍️</span>\r\n          -Eric's-Emporium\r\n        </Link>\r\n      </h1>\r\n\r\n      <nav>\r\n        {showNavigation()}\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React, { useEffect } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport Jumbotron from '../components/Jumbotron';\r\nimport { ADD_ORDER } from '../utils/mutations';\r\nimport { idbPromise } from '../utils/helpers';\r\n\r\nfunction Success() {\r\n  const [addOrder] = useMutation(ADD_ORDER);\r\n\r\n  useEffect(() => {\r\n    async function saveOrder() {\r\n      const cart = await idbPromise('cart', 'get');\r\n      const products = cart.map((item) => item._id);\r\n\r\n      if (products.length) {\r\n        const { data } = await addOrder({ variables: { products } });\r\n        const productData = data.addOrder.products;\r\n\r\n        productData.forEach((item) => {\r\n          idbPromise('cart', 'delete', item);\r\n        });\r\n      }\r\n\r\n      setTimeout(() => {\r\n        window.location.assign('/');\r\n      }, 3000);\r\n    }\r\n\r\n    saveOrder();\r\n  }, [addOrder]);\r\n\r\n  return (\r\n    <div>\r\n      <Jumbotron>\r\n        <h1>Success!</h1>\r\n        <h2>Thank you for your purchase!</h2>\r\n        <h2>You will now be redirected to the home page</h2>\r\n      </Jumbotron>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Success;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useQuery } from '@apollo/client';\r\nimport { QUERY_USER } from '../utils/queries';\r\n\r\nfunction OrderHistory() {\r\n  const { data } = useQuery(QUERY_USER);\r\n  let user;\r\n\r\n  if (data) {\r\n    user = data.user;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container my-1\">\r\n        <Link to=\"/\">← Back to Products</Link>\r\n\r\n        {user ? (\r\n          <>\r\n            <h2>\r\n              Order History for {user.firstName} {user.lastName}\r\n            </h2>\r\n            {user.orders.map((order) => (\r\n              <div key={order._id} className=\"my-2\">\r\n                <h3>\r\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\r\n                </h3>\r\n                <div className=\"flex-row\">\r\n                  {order.products.map(({ _id, image, name, price }, index) => (\r\n                    <div key={index} className=\"card px-1 py-1\">\r\n                      <Link to={`/products/${_id}`}>\r\n                        <img alt={name} src={`/images/${image}`} />\r\n                        <p>{name}</p>\r\n                      </Link>\r\n                      <div>\r\n                        <span>${price}</span>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </>\r\n        ) : null}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OrderHistory;\r\n","import React from \"react\";\r\nimport { useQuery } from '@apollo/client';\r\nimport { useStoreContext } from '../utils/GlobalState';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { QUERY_WISHLIST } from \"../utils/queries\";\r\n\r\nconst Wishlist = () => {\r\n    const { loading, data } = useQuery(QUERY_WISHLIST);\r\n    const user = data?.wishlist || [];\r\n\r\n    console.log(data?.wishlist?.wishlist);\r\n\r\n    const [state] = useStoreContext();\r\n\r\n    function calculateTotal() {\r\n        let sum = 0;\r\n        state.wishlist.forEach((item) => {\r\n            sum += item.price;\r\n        });\r\n        return sum.toFixed(2);\r\n    }\r\n\r\n    return (\r\n        <div className=\"container my-1\">\r\n            <Link to=\"/\">← Back to Products</Link>\r\n\r\n            <h2>Wishlist</h2>\r\n            {loading ? (\r\n            <div>Loading...</div>\r\n          ) : (\r\n            <div>Done loading</div>\r\n          )}\r\n            {user.wishlist?.length ? (\r\n                <div>\r\n                    {user.wishlist.map((item) => (\r\n                        < div className=\"flex-row\" >\r\n                            <div>\r\n                                <img\r\n                                    src={`/images/${item.image}`}\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <div>{item.name}, ${item.price}</div>\r\n                                <div>\r\n                                    <span\r\n                                        role=\"img\"\r\n                                        aria-label=\"trash\"\r\n                                    // onClick={() => removeFromCart(item)}\r\n                                    >\r\n                                        🗑️\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n\r\n                    <div className=\"flex-row space-between\">\r\n                        <strong>Total: ${calculateTotal()}</strong>\r\n                    </div>\r\n                </div>\r\n            ) : (\r\n                <h3>\r\n                    <span role=\"img\" aria-label=\"shocked\">\r\n                        😱\r\n                    </span>\r\n                    You haven't added anything to your wishlist yet!\r\n                </h3>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Wishlist;","import React from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport {\r\n  ApolloClient,\r\n  InMemoryCache,\r\n  ApolloProvider,\r\n  createHttpLink,\r\n} from '@apollo/client';\r\nimport { setContext } from '@apollo/client/link/context';\r\n\r\nimport Home from './pages/Home';\r\nimport Detail from './pages/Detail';\r\nimport NoMatch from './pages/NoMatch';\r\nimport Login from './pages/Login';\r\nimport Signup from './pages/Signup';\r\nimport Nav from './components/Nav';\r\nimport { StoreProvider } from './utils/GlobalState';\r\nimport Success from './pages/Success';\r\nimport OrderHistory from './pages/OrderHistory';\r\nimport Wishlist from './pages/Wishlist';\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: '/graphql',\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  const token = localStorage.getItem('id_token');\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : '',\r\n    },\r\n  };\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <Router>\r\n        <div>\r\n          <StoreProvider>\r\n            <Nav />\r\n            <Routes>\r\n              <Route \r\n                path=\"/\" \r\n                element={<Home />} \r\n              />\r\n              <Route \r\n                path=\"/login\" \r\n                element={<Login />} \r\n              />\r\n              <Route \r\n                path=\"/signup\" \r\n                element={<Signup />} \r\n              />\r\n              <Route \r\n                path=\"/success\" \r\n                element={<Success />} \r\n              />\r\n              <Route \r\n                path=\"/orderHistory\" \r\n                element={<OrderHistory />} \r\n              />\r\n              <Route \r\n                path=\"/products/:id\" \r\n                element={<Detail />} \r\n              />\r\n              <Route\r\n                path='/wishlist'\r\n                element={<Wishlist/>} \r\n              />\r\n              <Route \r\n                path=\"*\" \r\n                element={<NoMatch />} \r\n              />\r\n            </Routes>\r\n          </StoreProvider>\r\n        </div>\r\n      </Router>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (\r\n    process.env.NODE_ENV === 'production' &&\r\n    'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}